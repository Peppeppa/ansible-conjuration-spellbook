---
######################################################
#
#    mount a smb drive
#
######################################################
# README:
#   creates a mountpoint and mounts a smb drive using variables
#
# usage:  define variables in var file and rename the architect_user... to those variables
#         rename tags & name

#-----------------------------------------------------
#   Header & variablen
#
- name: NAS_SMB_mount | load variables
  tags: archivi,nas_smb
  set_fact:
    user: "{{ architect_user }}" #gets ownership and rights to files and mounts
    smb_cred_file: "{{ architect_user_dir }}/.smbcredentials"
    local_mountpoint: "{{ nas_backup_mountpoint }}"
    remote_mountpoint: "{{ nas_backup_path }}"

#-----------------------------------------------------
#   DEBUG
#
- name: NAS_SMB_mount | DEBUG show variables
  tags: archivi,nas_smb,debug
  debug:
    msg:
      - "{{ user }} - {{ architect_user_dir }}"
      - "{{ smb_cred_file }} - {{ architect_user_dir }}/.smbcredentials"
      - "{{ local_mountpoint }} - {{ nas_backup_mountpoint }}"
      - "{{ remote_mountpoint }} - {{ nas_backup_path }}"

#-----------------------------------------------------
#   pre_tasks
#
- name: NAS_SMB_mount | Install cifs-utils
  tags: archivi,nas_smb
  ansible.builtin.package:
    name: cifs-utils
    state: present
  #register: package_install_smb_nas  #alte reboot funktion ohne handler
  notify: handler | reboot

#-----------------------------------------------------
#   Main
#
- name: NAS_SMB_mount | Create smbcredentials file
  tags: archivi,nas_smb
  ansible.builtin.template:
    src: templates/smbcredentials.j2
    dest: "{{ smb_cred_file }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0600"

- name: NAS_SMB_mount | Create mount directory
  tags: archivi,nas_smb
  ansible.builtin.file:
    path: "{{ local_mountpoint }}"
    state: directory
    mode: "0755"

- name: NAS_SMB_mount | Mount SMB share
  tags: archivi,nas_smb
  ansible.builtin.mount:
    path: "{{ local_mountpoint }}"
    src: "//{{ remote_mountpoint }}"
    fstype: cifs
    opts: "credentials={{ smb_cred_file }},uid={{ user }},gid={{ user }},vers=3.0,iocharset=iso8859-1,_netdev"
    state: mounted
  become: true

#-----------------------------------------------------
#   post_tasks
#
- name: NAS_SMB_mount | Ensure NAS mount is persistent across reboots
  tags: archivi,nas_smb
  lineinfile:
    path: /etc/fstab
    line: "//{{ remote_mountpoint }} {{ local_mountpoint }} cifs credentials={{ smb_cred_file }},uid={{ user }},gid={{ user }},vers=3.0,iocharset=iso8859-1,_netdev 0 0"
    state: present
  become: yes
#-----------------------------------------------------
#   Handlers
#

#-----------------------------------------------------
#   roles
#
