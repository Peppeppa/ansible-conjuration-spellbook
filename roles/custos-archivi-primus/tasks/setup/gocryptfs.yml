---
######################################################
#
#     install Gocryptfs and make connection to hetzner storagebox via smb
#
######################################################
# README:
#
#

#-----------------------------------------------------
#   Header & variablen
#
#- name: task_name | load variables 
#  tags: tag1,tag2
#  set_fact:
#    var_1: 
#    var_2: 
#    var_3: "{{ beispiel_variable }}"
#    var_4: 

#-----------------------------------------------------
#   DEBUG
#
- name: task_name | DEBUG - show loaded variables
  tags: archivi,gocryptfs,debug
  debug:
    msg: 
      - "{{ architect_user_dir }}"
      - "{{ architect_user }}"
      - "{{ hetzner_storagebox_user }}"


#-----------------------------------------------------
#   pre_tasks
#
- name: goCryptFS | Ensure required packages are installed
  tags: archivi,gocryptfs
  ansible.builtin.package:
    name:
      - gocryptfs
      - cifs-utils
    state: present
      #  register: package_install_gocryptfs
    notify: handler | reboot


#-----------------------------------------------------
#   Main
#
- name: goCryptFS | Create cloudcredentials from template
  tags: archivi,gocryptfs
  ansible.builtin.template:
    src: cloudcredentials.j2
    dest: "{{ architect_user_dir }}/.cloudcredentials"
    owner: "{{ architect_user }}"
    mode: '0600'

- name: goCryptFS | Create mount directories
  tags: archivi,gocryptfs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ architect_user }}"
    group: "{{ architect_user }}"
    mode: '0755'
  with_items:
    - /mnt/storagebox_crypt
    - /mnt/storagebox

- name: goCryptFS | Ensure SMB credentials file exists
  tags: archivi,gocryptfs
  ansible.builtin.file:
    path: "{{ architect_user_dir }}/.cloudcredentials"
    state: touch
    owner: "{{ architect_user }}"
    group: "{{ architect_user }}"
    mode: '0600'

- name: goCryptFS | Mount the SMB share
  tags: archivi,gocryptfs
  ansible.builtin.mount:
    path: /mnt/storagebox_crypt
    src: "//{{ hetzner_storagebox_user }}.your-storagebox.de/backup"
    fstype: cifs
    opts: "credentials={{ architect_user_dir }}/.cloudcredentials,iocharset=utf8,rw,_netdev,uid={{ architect_user}},gid={{ architect_user}},file_mode=0660,dir_mode=0770"
    state: mounted
  become: true

- name: goCryptFS | Check if gocryptfs is already initialized
  tags: archivi,gocryptfs
  ansible.builtin.stat:
    path: /mnt/storagebox_crypt/gocryptfs.conf
  register: gocryptfs_conf

- name: goCryptFS | Initialize gocryptfs
  tags: archivi,gocryptfs,init
  ansible.builtin.expect:
    command: "gocryptfs -init /mnt/storagebox_crypt"
    responses:
      "Password:": "{{ gocryptfs_password_backup }}"
      "Repeat:": "{{ gocryptfs_password_backup }}"
  when: not gocryptfs_conf.stat.exists
  become: true

- name: goCryptFS | Create gocryptfs password file from template
  tags: archivi,gocryptfs
  ansible.builtin.template:
    src: storagebox_crypt.j2
    dest: "{{ architect_user_dir }}/.storagebox_crypt"
    owner: "{{ architect_user }}"
    group: "{{ architect_user }}"
    mode: '0600'

- name: goCryptFS | Ensure allow_other is enabled in fuse.conf
  tags: archivi,gocryptfs,mountcryptfs
  lineinfile:
    path: /etc/fuse.conf
    line: "user_allow_other"
    state: present
  become: true

    #- name: goCryptFS | Mount gocryptfs
    #  tags: archivi,gocryptfs,mountcryptfs
    #  ansible.builtin.mount:
    #    path: /mnt/storagebox
    #    src: /mnt/storagebox_crypt
    #    fstype: fuse
    #    opts: "rw,nofail,auto,x-systemd.idle-timeout=10,x-systemd.automount,allow_other,quiet,passfile={{ architect_user_dir }}/.storagebox_crypt"
    #    state: mounted
    #  become: true


- name: goCryptFS | mount mount in mount_crypt
  tags: archivi,gocryptfs,mountcryptfs
  lineinfile:
    path: /etc/fstab
    line: "/mnt/storagebox_crypt /mnt/storagebox    fuse./usr/bin/gocryptfs rw,nofail,auto,x-systemd.idle-timeout=10,x-systemd.automount,allow_other,quiet,passfile={{ architect_user_dir }}/.storagebox_crypt 0 0"
    state: present
  become: yes

- name: goCryptFS | mount a
  tags: archivi,gocryptfs,mountcryptfs
  command: mount -a -vvv


#-----------------------------------------------------
#   post_tasks
#


#-----------------------------------------------------
#   Handlers
#


#-----------------------------------------------------
#   roles
#





