---
######################################################
#
#     install docker ce complete
#
######################################################
# README:
#   installiert docker
#

#-----------------------------------------------------
#   Header & variablen
#
- name: name1 | load variables 
  tags: tag1,tag2,dockerce
  set_fact:
    user: "{{ var_1 }}"      #gets ownership and rights to files and mounts
    gpg_key_url: "https://download.docker.com/linux/ubuntu/gpg"   #"{{ var_2 }}"
    docker_repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"    #"{{ var_3 }}"


#-----------------------------------------------------
#   DEBUG
#
- name: role_name | task_name
  tags: tag1,tag2,dockerce,debug
  debug:
    msg: 
      - "{{ var_1 }}"
      - "{{ var_2 }}"
      - "{{ var_3 }}"


#-----------------------------------------------------
#   pre_tasks
#
- name: name1 | Install required packages
  tags: tag1,tag2,dockerce
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes

- name: name1 | Add Dockerâ€™s official GPG key
  tags: tag1,tag2,dockerce
  apt_key:
    url: "{{ gpg_key_url }}"
    state: present

- name: name1 | Add Docker repository
  tags: tag1,tag2,dockerce
  apt_repository:
    repo: "{{ docker_repo }}"
    state: present

#-----------------------------------------------------
#   Main
#
- name: name1 | Install Docker
  tags: tag1,tag2,dockerce
  apt:
    name: docker-ce
    state: latest
    update_cache: yes

- name: name1 | Install pip
  tags: tag1,tag2,dockerce
  apt:
    name: python3-pip
    state: present
    update_cache: yes

- name: name1 | Install pipx
  tags: tag1,tag2,dockerce
  apt:
    name: pipx
    state: present
    update_cache: yes

- name: name1 | Install Docker-compose
  tags: tag1,tag2,dockerce
  apt:
    name: docker-compose
    state: latest
    update_cache: yes

      #- name: name1 | Install Docker.io
      #  tags: tag1,tag2,dockerce
      #  apt:
      #    name: docker.io
      #    state: latest
      #    update_cache: yes


      #- name: name1 | Install Docker Compose using pip
      #  tags: tag1,tag2,dockerce
      #  community.general.pipx:
      #    name: docker-compose
      #    state: latest

#-----------------------------------------------------
#   post_tasks
#
- name: name1 | Ensure Docker service is started
  tags: tag1,tag2,dockerce
  service:
    name: docker
    state: started
    enabled: yes

- name: name1 | Add user to Docker group
  tags: tag1,tag2,dockerce
  user:
    name: "{{ user }}"
    groups: docker
    append: yes


#-----------------------------------------------------
#   Handlers
#


#-----------------------------------------------------
#   roles
#




